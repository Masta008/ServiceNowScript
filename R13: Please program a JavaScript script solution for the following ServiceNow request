Please program a JavaScript script solution for the following ServiceNow request: 
Rules for access control lists (ACLs) restrict access to data by requiring users to pass a set of requirements before they can interact with it, all client callable script includes should be secured with required roles.

Any logged-in users with minimum snc_internal can access an unprotected CCSI by default. Attacker can run a GlideAjax on console or do a custom HTTP request xmlhttp.do and can execute functions defined in Client callable script include. Create ACL around script include with Type as "client_callable_script_include" and define required roles.

(function (finding, current) {

    var gr_acl = new GlideRecord('sys_security_acl');
		gr_acl.addQuery('type','client_callable_script_include');
		gr_acl.addQuery('name','CONTAINS',current.name);
		gr_acl.query();
		if(!gr_acl.next()){
			finding.setCurrentSource(current);
			finding.increment();
		}
	

})(finding, current);

ChatGPT
To secure a Client Callable Script Include with required roles in ServiceNow using ACLs, you can use the following JavaScript script. This script will create an ACL for the specified Client Callable Script Include and set the required roles:

javascript
Copy code
(function (finding, current) {

    // Specify the script include name
    var scriptIncludeName = 'your_script_include_name';

    // Specify the required roles for access
    var requiredRoles = 'role1,role2';

    // Check if ACL exists for the client callable script include
    var aclGR = new GlideRecord('sys_security_acl');
    aclGR.addQuery('type', 'client_callable_script_include');
    aclGR.addQuery('script_include', scriptIncludeName);
    aclGR.query();

    if (!aclGR.next()) {
        // If ACL doesn't exist, create a new one
        var newACL = new GlideRecord('sys_security_acl');
        newACL.initialize();
        newACL.type = 'client_callable_script_include';
        newACL.script_include = scriptIncludeName;
        newACL.operations = 'access,execute';
        newACL.description = 'ACL for ' + scriptIncludeName;
        newACL.insert();

        // Add required roles to the ACL entry
        var aclEntryGR = new GlideRecord('sys_security_acl_role');
        aclEntryGR.initialize();
        aclEntryGR.acl = newACL.sys_id;
        aclEntryGR.role = requiredRoles;
        aclEntryGR.insert();

        finding.setCurrentSource(current);
        finding.increment();
    }

})(finding, current);
Make sure to replace 'your_script_include_name' with the actual name of your Client Callable Script Include and 'role1,role2' with the roles that should have access.

This script checks if an ACL already exists for the specified script include. If not, it creates a new ACL entry and associates the required roles with it. If an ACL already exists, it does nothing.
