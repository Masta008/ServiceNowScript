//Step one : Presented the result Script from ServiceNow after the run of Instance Scan

++Communitation with ChatGPT++

//User 
/ServiceNow Field: "Description"
Scripted Web Services insert/update/delete data directly

//ServiceNow Field: "Resolution Details"
Any update, insert or delete operations should be done in script include

//ServiceNow Field "Script"


//Answer ChatGPT
In ServiceNow, you can perform insert, update, and delete operations on records using server-side scripting, specifically in a Script Include or other server-side scripting components like Business Rules, Scripted REST APIs, or UI Actions. Here, I'll provide you with a general overview of how to perform these operations in a Script Include:

    Create a Script Include:
        Navigate to "System Definition" > "Script Includes."
        Click "New" to create a new Script Include.
        Define a name for your Script Include and set the appropriate scope.

    Write Your Functions:
        Inside the Script Include, write JavaScript functions for insert, update, and delete operations.

    Insert Operation:

    javascript

var MyScriptInclude = Class.create();
MyScriptInclude.prototype = {
   initialize: function() {},

   insertRecord: function(table, data) {
      var gr = new GlideRecord(table);
      gr.initialize();
      for (var field in data) {
         gr.setValue(field, data[field]);
      }
      gr.insert();
      return gr;
   },
};

// Usage example:
// var record = MyScriptInclude.insertRecord('incident', {short_description: 'New Incident', description: 'Description'});

Update Operation:

javascript

MyScriptInclude.prototype.updateRecord = function(table, sys_id, data) {
   var gr = new GlideRecord(table);
   if (gr.get(sys_id)) {
      for (var field in data) {
         gr.setValue(field, data[field]);
      }
      gr.update();
      return gr;
   }
};

// Usage example:
// MyScriptInclude.updateRecord('incident', 'INC001001', {short_description: 'Updated Incident'});

Delete Operation:

javascript

    MyScriptInclude.prototype.deleteRecord = function(table, sys_id) {
       var gr = new GlideRecord(table);
       if (gr.get(sys_id)) {
          gr.deleteRecord();
          return true;
       }
       return false;
    };

    // Usage example:
    // MyScriptInclude.deleteRecord('incident', 'INC001001');

    Usage:
        You can use these functions in other server-side scripts like Business Rules, Scripted REST APIs, or UI Actions to interact with records as needed.

Remember to validate inputs, handle errors, and implement appropriate security measures when working with record operations in Script Includes or any other server-side scripts in ServiceNow to ensure data integrity and security.
